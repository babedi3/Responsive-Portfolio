{"ast":null,"code":"var _jsxFileName = \"/Users/brian/Desktop/untitledfolder/developerFolio/src/containers/profile/Profile.js\";\nimport React, { useState, useEffect, lazy, Suspense } from \"react\";\nimport ApolloClient, { gql } from \"apollo-boost\";\n/* import { openSource } from \"../../portfolio\";\n */\n\nimport Contact from \"../contact/Contact\";\nimport Loading from \"../loading/Loading\";\n\nconst renderLoader = () => /*#__PURE__*/React.createElement(Loading, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 28\n  }\n});\n\nconst GithubProfileCard = lazy(() => import('../../components/githubProfileCard/GithubProfileCard'));\nexport default function Profile() {\n  const [prof, setrepo] = useState([]);\n\n  function setProfileFunction(array) {\n    setrepo(array);\n  }\n\n  function getProfileData() {\n    const client = new ApolloClient({\n      uri: \"https://api.github.com/graphql\",\n      request: operation => {\n        operation.setContext({\n          headers: {\n            authorization: `Bearer ${openSource.githubConvertedToken}`\n          }\n        });\n      }\n    });\n    client.query({\n      query: gql`\n      {\n        user(login:\"${openSource.githubUserName}\") { \n          name\n          bio\n          isHireable\n          avatarUrl\n          location\n        }\n    }\n      `\n    }).then(result => {\n      setProfileFunction(result.data.user);\n    }).catch(function (error) {\n      console.log(error);\n      setProfileFunction(\"Error\");\n      console.log(\"Because of this Error Contact Section is Showed instead of Profile\");\n      openSource.showGithubProfile = \"false\";\n    });\n  }\n\n  useEffect(() => {\n    if (openSource.showGithubProfile === \"true\") {\n      getProfileData();\n    }\n  }, []);\n\n  if (openSource.showGithubProfile === \"true\" && !(typeof prof === 'string' || prof instanceof String)) {\n    return /*#__PURE__*/React.createElement(Suspense, {\n      fallback: renderLoader(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(GithubProfileCard, {\n      prof: prof,\n      key: prof.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(Contact, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 12\n      }\n    });\n  }\n}","map":{"version":3,"sources":["/Users/brian/Desktop/untitledfolder/developerFolio/src/containers/profile/Profile.js"],"names":["React","useState","useEffect","lazy","Suspense","ApolloClient","gql","Contact","Loading","renderLoader","GithubProfileCard","Profile","prof","setrepo","setProfileFunction","array","getProfileData","client","uri","request","operation","setContext","headers","authorization","openSource","githubConvertedToken","query","githubUserName","then","result","data","user","catch","error","console","log","showGithubProfile","String","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,IAArC,EAA2CC,QAA3C,QAA2D,OAA3D;AACA,OAAOC,YAAP,IAAuBC,GAAvB,QAAkC,cAAlC;AACA;;;AAEA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,MAAMC,YAAY,GAAG,mBAAM,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAA3B;;AACA,MAAMC,iBAAiB,GAAGP,IAAI,CAAC,MAAM,OAAO,sDAAP,CAAP,CAA9B;AACA,eAAe,SAASQ,OAAT,GAAmB;AAChC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;;AACA,WAASa,kBAAT,CAA4BC,KAA5B,EAAmC;AACjCF,IAAAA,OAAO,CAACE,KAAD,CAAP;AACD;;AACD,WAASC,cAAT,GAA0B;AACxB,UAAMC,MAAM,GAAG,IAAIZ,YAAJ,CAAiB;AAC9Ba,MAAAA,GAAG,EAAE,gCADyB;AAE9BC,MAAAA,OAAO,EAAGC,SAAD,IAAe;AACtBA,QAAAA,SAAS,CAACC,UAAV,CAAqB;AACnBC,UAAAA,OAAO,EAAE;AACPC,YAAAA,aAAa,EAAG,UAASC,UAAU,CAACC,oBAAqB;AADlD;AADU,SAArB;AAKD;AAR6B,KAAjB,CAAf;AAWAR,IAAAA,MAAM,CACHS,KADH,CACS;AACLA,MAAAA,KAAK,EAAEpB,GAAI;;sBAEGkB,UAAU,CAACG,cAAe;;;;;;;;;AAHnC,KADT,EAcGC,IAdH,CAcSC,MAAD,IAAY;AAChBf,MAAAA,kBAAkB,CAACe,MAAM,CAACC,IAAP,CAAYC,IAAb,CAAlB;AACD,KAhBH,EAiBGC,KAjBH,CAiBS,UAAUC,KAAV,EAAiB;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAnB,MAAAA,kBAAkB,CAAC,OAAD,CAAlB;AACAoB,MAAAA,OAAO,CAACC,GAAR,CAAY,oEAAZ;AACAX,MAAAA,UAAU,CAACY,iBAAX,GAA+B,OAA/B;AACH,KAtBH;AAuBD;;AACDlC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIsB,UAAU,CAACY,iBAAX,KAAiC,MAArC,EAA6C;AAC3CpB,MAAAA,cAAc;AACf;AACF,GAJQ,EAIN,EAJM,CAAT;;AAKF,MAAIQ,UAAU,CAACY,iBAAX,KAAiC,MAAjC,IAA2C,EAAE,OAAOxB,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,YAAYyB,MAA9C,CAA/C,EAAqG;AACjG,wBACE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAE5B,YAAY,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,iBAAD;AAAmB,MAAA,IAAI,EAAEG,IAAzB;AAA+B,MAAA,GAAG,EAAEA,IAAI,CAAC0B,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD,GANH,MAMS;AACL,wBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AACF","sourcesContent":["import React, { useState, useEffect ,lazy, Suspense } from \"react\";\nimport ApolloClient, { gql } from \"apollo-boost\";\n/* import { openSource } from \"../../portfolio\";\n */\nimport Contact from \"../contact/Contact\";\nimport Loading from \"../loading/Loading\";\n\nconst renderLoader = () => <Loading />;\nconst GithubProfileCard = lazy(() => import('../../components/githubProfileCard/GithubProfileCard'));\nexport default function Profile() {\n  const [prof, setrepo] = useState([]);\n  function setProfileFunction(array) {\n    setrepo(array);\n  }\n  function getProfileData() {\n    const client = new ApolloClient({\n      uri: \"https://api.github.com/graphql\",\n      request: (operation) => {\n        operation.setContext({\n          headers: {\n            authorization: `Bearer ${openSource.githubConvertedToken}`,\n          },\n        });\n      },\n    });\n\n    client\n      .query({\n        query: gql`\n      {\n        user(login:\"${openSource.githubUserName}\") { \n          name\n          bio\n          isHireable\n          avatarUrl\n          location\n        }\n    }\n      `,\n      })\n      .then((result) => {\n        setProfileFunction(result.data.user);\n      })\n      .catch(function (error) {\n          console.log(error);\n          setProfileFunction(\"Error\");\n          console.log(\"Because of this Error Contact Section is Showed instead of Profile\");\n          openSource.showGithubProfile = \"false\";\n      });\n  }\n  useEffect(() => {\n    if (openSource.showGithubProfile === \"true\") {\n      getProfileData();\n    }\n  }, []);\nif (openSource.showGithubProfile === \"true\" && !(typeof prof === 'string' || prof instanceof String)){  \n    return (\n      <Suspense fallback={renderLoader()}>\n        <GithubProfileCard prof={prof} key={prof.id} /> \n      </Suspense>\n       );\n  } else {\n    return <Contact />;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}